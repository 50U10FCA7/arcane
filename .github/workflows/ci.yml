name: CI

on:
  push:
    branches: ["main"]
    tags: ["arcana-*"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  RUST_BACKTRACE: 1

jobs:

  ##########################
  # Linting and formatting #
  ##########################

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          components: clippy

      - run: make cargo.lint

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt

      - run: make cargo.fmt check=yes




  ###########
  # Testing #
  ###########

  feature:
    strategy:
      fail-fast: false
      matrix:
        include:
          - { features: "<none>", crate: "arcana-core" }
          - { features: "codegen", crate: "arcana-core" }
          - { features: "es", crate: "arcana-core" }
          - { features: "es,codegen", crate: "arcana-core" }
          - { features: "<none>", crate: "arcana" }
          - { features: "derive", crate: "arcana" }
          - { features: "es", crate: "arcana" }
          - { features: "es,derive", crate: "arcana" }
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: nightly

      - run: cargo +nightly update -Z minimal-versions

      - run: cargo check -p ${{ matrix.crate }} --no-default-features
                   ${{ (matrix.features != '<none>'
                        && format('--features {0}', matrix.features))
                    ||     '' }}
        env:
          RUSTFLAGS: -D warnings

  msrv:
    name: MSRV
    strategy:
      fail-fast: false
      matrix:
        msrv: ["1.65.0"]
        os:
          - ubuntu
          - macOS
          - windows
    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.msrv }}
      - run: rustup default ${{ matrix.msrv }}
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: nightly

      - run: cargo +nightly update -Z minimal-versions

      - run: make test.cargo

  test:
    strategy:
      fail-fast: false
      matrix:
        crate:
          - arcana-core
          - arcana-codegen-impl
          - arcana-codegen-shim
          - arcana-codegen
          - arcana
        os:
          - ubuntu
          - macOS
          - windows
        toolchain:
          - stable
          - beta
          - nightly
    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          components: rust-src
      - run: rustup default ${{ matrix.toolchain }}

      - run: cargo install cargo-careful
        if: ${{ matrix.toolchain == 'nightly' }}

      - run: make test.cargo crate=${{ matrix.crate }}
                  careful=${{ (matrix.toolchain == 'nightly' && 'yes')
                           ||                                   'no' }}




  #################
  # Documentation #
  #################

  rustdoc:
    strategy:
      matrix:
        crate:
          - arcana-core
          - arcana-codegen-impl
          - arcana-codegen-shim
          - arcana-codegen
          - arcana
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: nightly

      - run: make cargo.doc crate=${{ matrix.crate }}
                            private=yes docsrs=yes
                            open=no
